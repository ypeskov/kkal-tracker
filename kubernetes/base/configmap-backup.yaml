apiVersion: v1
kind: ConfigMap
metadata:
  name: backup-script
data:
  backup.sh: |
    #!/bin/sh
    set -e

    # Configuration
    DB_PATH="${DATABASE_PATH:-/data/app.db}"
    BACKUP_DIR="${BACKUP_PATH:-/data/backups}"
    RETENTION_DAYS="${RETENTION_DAYS:-7}"
    GDRIVE_FOLDER_PATH="${GDRIVE_FOLDER_PATH:-services/kkal-tracker/backups}"
    TIMESTAMP=$(date +%Y%m%d_%H%M%S)
    BACKUP_FILE="kkal_tracker_backup_${TIMESTAMP}.db"

    # Create backup directory if it doesn't exist
    mkdir -p "${BACKUP_DIR}"

    # Check if database exists
    if [ ! -f "${DB_PATH}" ]; then
        echo "Error: Database file not found at ${DB_PATH}"
        exit 1
    fi

    echo "Starting backup of database: ${DB_PATH}"
    echo "Backup timestamp: ${TIMESTAMP}"

    # Install sqlite3
    apk add --no-cache sqlite

    # Create backup using SQLite's backup command (ensures consistency)
    echo "Creating SQLite backup..."
    sqlite3 "${DB_PATH}" ".backup '${BACKUP_DIR}/${BACKUP_FILE}'"

    # Verify backup was created
    if [ ! -f "${BACKUP_DIR}/${BACKUP_FILE}" ]; then
        echo "Error: Backup file was not created"
        exit 1
    fi

    # Get backup size
    BACKUP_SIZE=$(du -h "${BACKUP_DIR}/${BACKUP_FILE}" | cut -f1)
    echo "Backup created successfully: ${BACKUP_FILE} (${BACKUP_SIZE})"

    # Compress backup
    echo "Compressing backup..."
    gzip "${BACKUP_DIR}/${BACKUP_FILE}"
    COMPRESSED_FILE="${BACKUP_FILE}.gz"
    COMPRESSED_SIZE=$(du -h "${BACKUP_DIR}/${COMPRESSED_FILE}" | cut -f1)
    echo "Compressed backup: ${COMPRESSED_FILE} (${COMPRESSED_SIZE})"

    # Upload to Google Drive if credentials are provided
    if [ -n "${GOOGLE_CREDENTIALS_JSON}" ]; then
        echo "Configuring rclone for Google Drive..."

        # Save credentials to file
        echo "${GOOGLE_CREDENTIALS_JSON}" > /tmp/service-account.json

        # Configure rclone
        mkdir -p ~/.config/rclone
        cat > ~/.config/rclone/rclone.conf << EOF
    [gdrive]
    type = drive
    scope = drive
    service_account_file = /tmp/service-account.json
    impersonate = ${GDRIVE_USER_EMAIL:-}
    EOF

        echo "Uploading to Google Drive..."

        # Create folder structure if needed
        rclone mkdir "gdrive:${GDRIVE_FOLDER_PATH}" 2>/dev/null || true

        # Upload the backup file
        rclone copy "${BACKUP_DIR}/${COMPRESSED_FILE}" "gdrive:${GDRIVE_FOLDER_PATH}/" -v

        # Verify upload
        if rclone ls "gdrive:${GDRIVE_FOLDER_PATH}/${COMPRESSED_FILE}" > /dev/null 2>&1; then
            echo "Successfully uploaded ${COMPRESSED_FILE} to Google Drive"
            # Note: Google Drive keeps all backups (no cleanup)
        else
            echo "Error: Upload to Google Drive failed"
            exit 1
        fi

        # Clean up credentials
        rm -f /tmp/service-account.json
        rm -rf ~/.config/rclone

        echo "Upload to Google Drive completed"
    else
        echo "Google Drive credentials not found, skipping upload"
    fi

    # Clean up old local backups (keep only last N days)
    echo "Cleaning up old local backups (keeping last ${RETENTION_DAYS} days)..."
    find "${BACKUP_DIR}" -name "kkal_tracker_backup_*.db.gz" -type f -mtime +${RETENTION_DAYS} -delete

    # List current local backups
    echo "Current local backups in ${BACKUP_DIR}:"
    ls -lh "${BACKUP_DIR}"/kkal_tracker_backup_*.db.gz 2>/dev/null || echo "No backups found"

    echo "Backup process completed successfully"